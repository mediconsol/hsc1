{
  "info": {
    "name": "Hospital Management System API",
    "description": "병원 통합 관리 시스템 REST API 컬렉션\n\n## 사용 방법\n1. 환경 변수 설정: {{baseUrl}}, {{authToken}}\n2. Authentication 폴더에서 로그인하여 토큰 획득\n3. 다른 API 호출 시 자동으로 토큰이 적용됩니다\n\n## 환경 변수\n- baseUrl: http://localhost:7001 (개발) 또는 https://api.hospital.com (운영)\n- authToken: 로그인 후 자동으로 설정됩니다",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "hospital-mgmt-api-v1",
    "updatedAt": "2025-08-07T10:00:00.000Z"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "사용자 인증 관련 API",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// 로그인 성공 시 토큰을 환경 변수에 저장",
                  "if (pm.response.code === 200) {",
                  "    const responseJson = pm.response.json();",
                  "    if (responseJson.data && responseJson.data.token) {",
                  "        pm.environment.set('authToken', responseJson.data.token);",
                  "        console.log('토큰이 환경 변수에 저장되었습니다:', responseJson.data.token);",
                  "    }",
                  "}",
                  "",
                  "// 응답 검증",
                  "pm.test('로그인 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('응답에 토큰 포함', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('token');",
                  "    pm.expect(responseJson.data).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@hospital.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "response": [
            {
              "name": "Login Success",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"admin@hospital.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/auth/login",
                  "host": ["{{baseUrl}}"],
                  "path": ["api", "v1", "auth", "login"]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"success\",\n  \"message\": \"로그인에 성공했습니다.\",\n  \"data\": {\n    \"user\": {\n      \"id\": 1,\n      \"name\": \"관리자\",\n      \"email\": \"admin@hospital.com\",\n      \"role\": 3,\n      \"role_name\": \"admin\"\n    },\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"expires_at\": \"2025-08-14T10:00:00Z\"\n  },\n  \"timestamp\": \"2025-08-07T10:00:00Z\",\n  \"request_id\": \"123e4567-e89b-12d3-a456-426614174000\"\n}"
            }
          ]
        },
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('사용자 정보 조회 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('사용자 정보 포함', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('id');",
                  "    pm.expect(responseJson.data).to.have.property('name');",
                  "    pm.expect(responseJson.data).to.have.property('email');",
                  "    pm.expect(responseJson.data).to.have.property('role');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "me"]
            }
          }
        },
        {
          "name": "Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// 로그아웃 성공 시 토큰 제거",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.unset('authToken');",
                  "    console.log('토큰이 환경 변수에서 제거되었습니다.');",
                  "}",
                  "",
                  "pm.test('로그아웃 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Employees",
      "description": "직원 관리 API",
      "item": [
        {
          "name": "Get All Employees",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('직원 목록 조회 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('직원 목록 데이터 확인', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('employees');",
                  "    pm.expect(responseJson.data).to.have.property('total_count');",
                  "    pm.expect(responseJson.data).to.have.property('pagination');",
                  "    pm.expect(responseJson.data.employees).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/employees?page=1&per_page=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "employees"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Get Employees by Department",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/employees?department=의료진&status=active",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "employees"],
              "query": [
                {
                  "key": "department",
                  "value": "의료진"
                },
                {
                  "key": "status",
                  "value": "active"
                }
              ]
            }
          }
        },
        {
          "name": "Search Employees",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/employees?search=김의사",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "employees"],
              "query": [
                {
                  "key": "search",
                  "value": "김의사"
                }
              ]
            }
          }
        },
        {
          "name": "Get Employee by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('직원 상세 조회 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('직원 상세 정보 확인', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('employee');",
                  "    pm.expect(responseJson.data.employee).to.have.property('id');",
                  "    pm.expect(responseJson.data.employee).to.have.property('name');",
                  "    pm.expect(responseJson.data.employee).to.have.property('department');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/employees/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "employees", "1"]
            }
          }
        },
        {
          "name": "Create New Employee",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('직원 등록 성공', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('생성된 직원 정보 확인', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('employee');",
                  "    pm.expect(responseJson.data.employee).to.have.property('id');",
                  "    pm.expect(responseJson.data.employee.name).to.eql('새로운의사');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employee\": {\n    \"name\": \"새로운의사\",\n    \"department\": \"의료진\",\n    \"position\": \"전문의\",\n    \"employment_type\": \"full_time\",\n    \"hire_date\": \"2025-08-01\",\n    \"phone\": \"010-1234-5678\",\n    \"email\": \"new.doctor@hospital.com\",\n    \"base_salary\": 8000000,\n    \"salary_type\": \"monthly\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/employees",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "employees"]
            }
          }
        },
        {
          "name": "Update Employee",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employee\": {\n    \"name\": \"수정된이름\",\n    \"position\": \"수석의사\",\n    \"base_salary\": 9000000\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/employees/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "employees", "1"]
            }
          }
        },
        {
          "name": "Delete Employee",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/employees/1",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "employees", "1"]
            }
          }
        }
      ]
    },
    {
      "name": "Leave Requests",
      "description": "휴가 신청 관리 API",
      "item": [
        {
          "name": "Get All Leave Requests",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('휴가 신청 목록 조회 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('휴가 신청 목록 데이터 확인', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('leave_requests');",
                  "    pm.expect(responseJson.data).to.have.property('total_count');",
                  "    pm.expect(responseJson.data).to.have.property('pagination');",
                  "    pm.expect(responseJson.data.leave_requests).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests?page=1&per_page=20",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "per_page",
                  "value": "20"
                }
              ]
            }
          }
        },
        {
          "name": "Get Pending Leave Requests",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests?status=pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                }
              ]
            }
          }
        },
        {
          "name": "Get Leave Requests by Type",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests?leave_type=annual&year=2025",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests"],
              "query": [
                {
                  "key": "leave_type",
                  "value": "annual"
                },
                {
                  "key": "year",
                  "value": "2025"
                }
              ]
            }
          }
        },
        {
          "name": "Create Leave Request",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('휴가 신청 생성 성공', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('생성된 휴가 신청 확인', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('leave_request');",
                  "    pm.expect(responseJson.data.leave_request).to.have.property('id');",
                  "    pm.expect(responseJson.data.leave_request.status).to.eql('pending');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"employee_id\": 5,\n  \"leave_request\": {\n    \"leave_type\": \"annual\",\n    \"start_date\": \"2025-08-15\",\n    \"end_date\": \"2025-08-17\",\n    \"days_requested\": 3,\n    \"reason\": \"가족 여행으로 인한 연차 사용\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests"]
            }
          }
        },
        {
          "name": "Get Leave Request Statistics",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('휴가 통계 조회 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('휴가 통계 데이터 확인', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('total_requests');",
                  "    pm.expect(responseJson.data).to.have.property('pending_requests');",
                  "    pm.expect(responseJson.data).to.have.property('approved_requests');",
                  "    pm.expect(responseJson.data).to.have.property('by_leave_type');",
                  "    pm.expect(responseJson.data).to.have.property('by_department');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests/statistics?year=2025",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests", "statistics"],
              "query": [
                {
                  "key": "year",
                  "value": "2025"
                }
              ]
            }
          }
        },
        {
          "name": "Get Annual Leave Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('연차 현황 조회 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('연차 현황 데이터 확인', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.data).to.have.property('employee_name');",
                  "    pm.expect(responseJson.data).to.have.property('total_annual_leave');",
                  "    pm.expect(responseJson.data).to.have.property('used_annual_leave');",
                  "    pm.expect(responseJson.data).to.have.property('remaining_annual_leave');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests/annual_leave_status?employee_id=5&year=2025",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests", "annual_leave_status"],
              "query": [
                {
                  "key": "employee_id",
                  "value": "5"
                },
                {
                  "key": "year",
                  "value": "2025"
                }
              ]
            }
          }
        },
        {
          "name": "Approve Leave Request",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"admin_notes\": \"휴가 승인합니다. 업무 인수인계 잘 부탁드립니다.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests/1/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests", "1", "approve"]
            }
          }
        },
        {
          "name": "Reject Leave Request",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"admin_notes\": \"해당 기간 중 중요 업무가 있어 휴가를 반려합니다.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests/1/reject",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests", "1", "reject"]
            }
          }
        },
        {
          "name": "Cancel Leave Request",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/v1/leave_requests/1/cancel",
              "host": ["{{baseUrl}}"],
              "path": ["api", "v1", "leave_requests", "1", "cancel"]
            }
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "description": "시스템 상태 확인",
      "item": [
        {
          "name": "Health Check",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('헬스 체크 성공', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('응답 시간 확인', function () {",
                  "    pm.expect(pm.response.responseTime).to.be.below(1000);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/up",
              "host": ["{{baseUrl}}"],
              "path": ["up"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 요청 전 공통 처리",
          "const timestamp = new Date().toISOString();",
          "pm.globals.set('timestamp', timestamp);",
          "",
          "// 토큰이 있는 경우 Authorization 헤더 자동 추가",
          "if (pm.environment.get('authToken') && !pm.request.headers.has('Authorization')) {",
          "    pm.request.headers.add({",
          "        key: 'Authorization',",
          "        value: 'Bearer ' + pm.environment.get('authToken')",
          "    });",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 모든 응답에 대한 공통 테스트",
          "pm.test('응답 시간 2초 이내', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Content-Type은 application/json', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});",
          "",
          "// 에러가 아닌 경우 성공적인 JSON 응답 구조 확인",
          "if (pm.response.code < 400) {",
          "    pm.test('성공 응답 구조 확인', function () {",
          "        const responseJson = pm.response.json();",
          "        pm.expect(responseJson).to.have.property('status');",
          "        pm.expect(responseJson).to.have.property('timestamp');",
          "        pm.expect(responseJson).to.have.property('request_id');",
          "    });",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:7001",
      "type": "string"
    }
  ]
}