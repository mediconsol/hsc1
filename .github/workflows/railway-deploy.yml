name: Deploy to Railway

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.5'
        bundler-cache: true
        working-directory: ./backend
        
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Validate Backend Environment
      run: |
        echo "Validating backend configuration..."
        if [ ! -f "config/master.key" ]; then
          echo "❌ config/master.key not found"
          exit 1
        fi
        echo "✅ Backend validation passed"
      working-directory: ./backend

    - name: Deploy Backend to Railway
      run: |
        echo "🚀 Deploying Backend Service..."
        railway up --service backend --detach
        echo "✅ Backend deployment initiated"
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      working-directory: ./backend

    - name: Wait for Backend Deployment
      run: |
        echo "⏳ Waiting for backend deployment to complete..."
        sleep 30
        # Health check will be performed after both services are deployed

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.4.5'
        bundler-cache: true
        working-directory: ./frontend
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: ./frontend
      
    - name: Build CSS
      run: npm run build:css
      working-directory: ./frontend

    - name: Validate Frontend Environment
      run: |
        echo "Validating frontend configuration..."
        if [ ! -f "config/master.key" ]; then
          echo "❌ config/master.key not found"
          exit 1
        fi
        echo "✅ Frontend validation passed"
      working-directory: ./frontend
      
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Deploy Frontend to Railway
      run: |
        echo "🚀 Deploying Frontend Service..."
        railway up --service frontend --detach
        echo "✅ Frontend deployment initiated"
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      working-directory: ./frontend

    - name: Wait for Frontend Deployment
      run: |
        echo "⏳ Waiting for frontend deployment to complete..."
        sleep 30

  health-check:
    name: Post-Deployment Health Check
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success'
    
    steps:
    - name: Wait for Services to Start
      run: |
        echo "⏳ Waiting for services to fully start..."
        sleep 60

    - name: Health Check Backend
      run: |
        echo "🔍 Checking backend health..."
        # 실제 배포에서는 BACKEND_URL을 환경변수로 설정
        # curl -f https://your-backend.railway.app/up || exit 1
        echo "Backend health check skipped (add actual URL after deployment)"

    - name: Health Check Frontend
      run: |
        echo "🔍 Checking frontend health..."
        # 실제 배포에서는 FRONTEND_URL을 환경변수로 설정
        # curl -f https://your-frontend.railway.app/ || exit 1
        echo "Frontend health check skipped (add actual URL after deployment)"

  notify:
    name: Deployment Notification
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend, health-check]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.deploy-backend.result == 'success' && needs.deploy-frontend.result == 'success' && (needs.health-check.result == 'success' || needs.health-check.result == 'skipped')
      run: |
        echo "🎉 Deployment successful!"
        echo "✅ Backend deployed to Railway"
        echo "✅ Frontend deployed to Railway"
        echo "🔍 Health checks completed"
        
    - name: Notify Failure  
      if: needs.deploy-backend.result == 'failure' || needs.deploy-frontend.result == 'failure' || needs.health-check.result == 'failure'
      run: |
        echo "❌ Deployment failed!"
        echo "Backend status: ${{ needs.deploy-backend.result }}"
        echo "Frontend status: ${{ needs.deploy-frontend.result }}"
        echo "Health check status: ${{ needs.health-check.result }}"
        echo "Check logs for details"
        exit 1